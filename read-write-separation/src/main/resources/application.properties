spring.application.name=read-write-separation

# mybatis 配置
## 实体包路径
mybatis.type-aliases-package=vip.openpark.read.write.domain
## xml 文件路径
mybatis.mapper-locations=classpath:*Mapper.xml
spring.main.allow-bean-definition-overriding=true

# shardingsphere-jdbc 用户配置手册官方文档：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/
## 模式配置
spring.shardingsphere.mode.type=Standalone
spring.shardingsphere.mode.repository.type=Jdbc
## 数据源配置
spring.shardingsphere.datasource.names=master,slave1,slave2
### master
spring.shardingsphere.datasource.master.dataSourceClassName=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driverClassName=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbcUrl=jdbc:mysql://192.168.0.105:3306/sharding_sphere_learn?useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=123456
### slave1
spring.shardingsphere.datasource.slave1.dataSourceClassName=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driverClassName=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbcUrl=jdbc:mysql://192.168.0.105:3307/sharding_sphere_learn?useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave1.username=root
spring.shardingsphere.datasource.slave1.password=123456
### slave2
spring.shardingsphere.datasource.slave2.dataSourceClassName=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave2.driverClassName=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave2.jdbcUrl=jdbc:mysql://192.168.0.105:3308/sharding_sphere_learn?useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.slave2.username=root
spring.shardingsphere.datasource.slave2.password=123456
## 读写分离规则配置
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.static-strategy.write-data-source-name=master
spring.shardingsphere.rules.readwrite-splitting.data-sources.myds.static-strategy.read-data-source-names=slave1,slave2
# 负载均衡算法名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.load-balancer-name=random-name
# 负载均衡算法配置(random-name保持一致)
# 负载均衡算法官方指南：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/load-balance/
spring.shardingsphere.rules.readwrite-splitting.load-balancers.random-name.type=ROUND_ROBIN
# 打印执行的 SQL
spring.shardingsphere.props.sql-show=true
spring.shardingsphere.props..sql-simple=true